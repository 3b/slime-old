2003-09-28  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (create-swank-server): Bind the listen-socket on the
	loopback interface by default, so that remote machines can't
	connect to the Swank server.

2003-09-27  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (with-trapping-compilation-notes): New macro for
	bindings the handlers to record compiler notes. Now being used in
	`compile-string', which I had broken when removing the compilation
	hook.

	* slime.el (slime-function-called-at-point): Rewritten to work
	better. Now considers "((foo ..." _not_ to be a function call to
	foo because of the double ('s - this will keep it from misfiring
	in e.g. LET bindings.
	(def-slime-test): All tests now being with (slime-sync). This
	fixes some accidental/bogus test failures.

	* swank.lisp (handle-notification-condition): Rewrote
	compiler-note collection. Now it uses lower-level condition
	handlers instead of c:*compiler-notification-function*. This way
	the error messages are tailored to omit redundant information,
	like the filename and original source text (which are displayed
	and highlighted in Emacs already). Much nicer.
	(sort-contexts-by-source-path): Now sorting xref results by
	lexical source-path order, so that you're always jumping in the
	same direction.
	(*debug-definition-finding*): New variable. You can set this to
	true if you want to be popped into the debugger when M-. fails to
	find a definition (for debugging the
	definition-finding). Otherwise it reports the error to Emacs as a
	message, like "Error: SETQ is a special form."

	* slime.el (slime-fetch-features-list): New command to fetch the
	*FEATURES* list from Lisp and store it away. This is done
	automatically upon connection, but can also be called manually to
	update.
	(slime-forward-reader-conditional): Now does the right things with
	reader-conditionals (#+ and #-) based on the Lisp features.

2003-09-26  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-setup): Setting `truncate-lines' to t in the
	debug buffer. I like having the backtrace take strictly one line
	per frame, since otherwise a few ugly arguments (e.g. streams) can
	chew up a lot of space. (Can make this a configurable on request
	if tastes differ :-)

	* swank.lisp: Did a little defensive programming so that asking
	for the definition of an unbound function will return nil to Emacs
	instead of entering the debugger.
	(format-frame-for-emacs): Binding *PRETTY-PRINT* to nil when
	formatting frames (due to truncate-lines change above).

2003-09-24  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* swank.lisp:
	Support for stream redirection.
	slime-output-stream: New structure.
	(slime-out-misc): New function.
	*slime-output*: New variable.
	(read-from-emacs): Redirect output to *slime-output*.
	(read-form): Bind *package* inside the standard-io-syntax macro.
	(eval-string): Read the string with read-form.
	(completions): Support for keyword completion.

	* slime.el (slime-process-available-input, slime-eval): Rewritten
	once again.  Don't use unwind-protect anymore. Didn't work
	properly when the Lisp side aborted due to too many debug
	levels. "Continuing" from the Emacs debugger aborts one level on
	the Lisp side. "Quitting" from the Emacs debugger quits the Lisp
	side too. Increase stack sizes before entering the recursive edit.
	(slime-eval-async-state, slime-eval, sldb-state): Support for stream
	output.
	slime-last-output-start: New variable.
	(slime-output-buffer, slime-output-buffer-position,
	 slime-insert-transcript-delimiter, slime-show-last-output,
	 slime-output-string): New functions.
	(slime-show-evaluation-result,
	slime-show-evaluation-result-continuation): Use them.
	(slime-use-inf-lisp-p, slime-insert-transcript-delimiter,
	 slime-inferior-lisp-marker-position,
	 slime-inferior-lisp-show-last-output): Deleted.
	(slime-use-tty-debugger, slime-debugger-hook,
	slime-enter-tty-debugger, slime-tty-debugger-state): Deleted. Removed
	tty debugger support.
	(def-sldb-invoke-restart): Renamed.
	(define-sldb-invoke-restart-key, define-sldb-invoke-restart-keys):
	Version without eval.
	(defun-if-undefined): New macro.
	Many indentation fixes.

2003-09-23  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (completions):
	Moved most of the completion code to Lisp.
	(string-prefix-p): Be case insensitive.

	* slime.el:
	Make sure define-minor-mode is defined before we use it.
	(slime-completing-read-internal, slime-completing-read-symbol-name,
	slime-read-from-minibuffer, slime-completions, slime-complete-symbol):
	Support for reading symbols and expressions with completion.
	(slime-read-symbol-name): New function.
	(slime-read-symbol): Use it.
	(slime-read-package-name): Case insensitive completion.

	(slime-edit-symbol-fdefinition, slime-edit-fdefinition): Rename
	slime-edit-symbol-fdefinition to slime-edit-fdefinition.

2003-09-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-show-xrefs): Improved the xrefs buffer, now
	using a custom minor mode.
	(slime-next-location): This function goes to the next "something"
	by funcall'ing slime-next-location-function. Currently that
	variable is set by xref commands like who-calls to go to the next
	matching reference. In future it can also be used to go to the
	next function definition for a generic-function-understanding
	version of edit-fdefinition. Bound to C-M-. and C-c C-SPC, until
	we see which binding is better.

2003-09-22  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-symbol-at-point): Now returns a symbol, as the
	name suggests.
	(slime-symbol-name-at-point): This one returns a string.
	(slime-read-symbol): New function for taking the symbol at point,
	or prompting if there isn't one.
	(slime-edit-fdefinition): Now uses looks up the symbol at point,
	not the function being called at point.

	* swank.lisp (who-calls, who-references, who-binds, who-sets,
	who-macroexpands): New function.
	(present-symbol-before-p): Use `*buffer-package*' when checking
	accessibility of symbols.

	* slime.el (slime-restore-window-configuration): New command to
	put the Emacs window configuration back the way it was before
	SLIME last changed it.
	(slime-who-calls, etc): Very basic WHO-{CALLS,..} support. Not
	finished, wrestling around trying to make `view-mode' or
	`help-mode' help me (I just want to hijack RET and C-m). Bound to
	"C-c C-w ...".

2003-09-21  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Rearranged the `outline-mode' structure slightly.
	(slime-check-connected): Using new function to give a helpful
	error message if you try to use commands before establishing a
	connection to CMUCL.
	(sldb-mode): Keys 0-9 are now shortcuts to invoke restarts.

	* README, swank.el: Updated commentary.

2003-09-20  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-choose-overlay-region): Tweaked overlay
	placement.

	* swank.lisp (handle-notification): Skipping null
	notifications. For some reason CMUCL occasionally calls us with
	NIL as each argument.

2003-09-19  Helmut Eller <e9626484@stud3.tuwien.ac.at>
	
	* slime.el (slime-connect): Propose default values when called
	interactively.
	(slime-process-available-input): If possible, use while rather than
	recursion.
	(slime-compilation-finished-continuation): New function.
	(slime-compile-file, slime-compile-defun): Use it.
	(slime-forward-source-path): Id an error is encounter move back to the
	last valid point.
	(slime-eval-region): Use append COND.  Send the entire string to the
	Lisp side and read&evaluate it there.
	(slime-eval-buffer): New function.
	(sldb-sugar-move, sldb-details-up, sldb-details-down): New functions.
	
	* swank.lisp (interactive-eval-region): New function.
	(re-evaluate-defvar): New function.
	(compile-defun): Install handler for compiler-errors.
	(function-first-code-location): Simplified.
	
2003-09-17  Helmut Eller <e9626484@stud3.tuwien.ac.at>
	
	* slime.el (slime-apropos-all): New command, bound to C-c M-a.
	(slime-eval): Simplified.
	(swank:arglist-string): Send a string and not a symbol.  It easier
	to package related thins in CL.
	(slime-edit-symbol-fdefinition): Prompt when called with
	prefix-argument.
	(slime-eval-region): New function.
	(slime-load-file): New function.
	(slime-show-description): Set slime minor mode in Help buffer.

	* swank.lisp: (read-string, from-string): Renamed read-string to
	from-string.
	(to-string) New function.
	(arglist-string): Catch reader errors.
	(sldb-loop): Also bind *readstrable*.

	
2003-09-16  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-toggle-trace-fdefinition): New command.
	(slime-symbol-at-point, slime-sexp-at-point): New utility functions.
	(slime-edit-symbol-fdefinition): Similar to slime-edit-fdefinition but
	uses swank:function-source-location-for-emacs.
	(slime-goto-source-location): New function.
	(sldb-show-source): Use it.
	(slime-read-package-name): Completing read for package names.
	(slime-apropos): Use it.

	* swank.lisp (function-source-location,
	function-source-location-for-emacs): New functions to extract
	source locations from compiled code.  For struct-accessors we try
	to find the source location of the corresponding constructor.
	(list-all-package-names): New function.
	(toggle-trace-fdefinition, tracedp): New functions.

2003-09-15  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el: Moved many CL fragments from slime.el to swank.lisp.
	(slime-compile-file, slime-compile-defun, slime-goto-location):
	Compiler notes are now represented with a property list.  To find
	the source expression first move to the file offset of the
	top-level form and then use the source path to find the
	expression.  This should avoid many reader issues.  For
	compile-defun store the start position of the top-level expression
	from the buffer in the compiler notes and use that to locate error
	messages.  Add error overlays for notes without context to the
	first available expression.

	* swank.lisp: Moved many CL fragments from slime.el to swank.lisp.
	(defslimefun): New macro.

2003-09-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-setup-command-hooks): Removed post-command-hook
	that was used for cleaning up input that was unprocessed due to an
	error breaking out of the process filter. This is now handled by
	an `unwind-protect' in the filter.

	* swank.lisp (apropos-list-for-emacs): Hacked the apropos listing
	to accept more options and to specially sort results.

	* slime.el (slime-net-send): Added newlines to messages over the
	wire. This makes the protocol nicely readable in Ethereal.
	(slime-sync): New function for blocking until asynchronous
	requests are complete.
	(slime-apropos): Hacked the apropos command: by default, only
	external symbols are shown. With a prefix argument you have the
	option to include internal symbols and to specify a package.
	(slime-run-tests): Extended the test suite. Use `M-x
	slime-run-tests' to run it.

2003-09-14  Luke Gorrie  <luke@bluetail.com>

	* slime.el, swank.lisp: Added the debugger written by Helmut.

	* cmucl-wire.el: Removed. The WIRE communication protocol has been
	replaced by a simple custom TCP protocol based on READ/PRIN1 to
	send sexps as ascii text. This simplifies the code, makes the
	protocol nicely debugable with ethereal, and should ease porting
	to other Lisps. Incremented TCP port number to 4005 in honor of
	the new protocol.
	
	In addition, Lisp now always uses *print-case* of :DOWNCASE when
	preparing sexps for Emacs. This is in reaction to a bug with Emacs
	reading the empty list as `NIL' instead of `nil'.

	* slime.el (slime-net-connect): The Emacs end of the new
	communication protocol.

	* swank.lisp (create-swank-server): The Lisp end of the new
	communication protocol.

2003-09-11  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-mode): Added Helmut's commands to the mode
	description.
	(slime-show-apropos): Setting `truncate-lines' to t in apropos
	listings, to avoid line-wrapping on overly long descriptions.
	(slime-run-tests): Added the beginnings of an automated test
	suite. (This is most useful for testing cross-Emacsen
	compatibility before releases.)

	* swank.lisp (symbol-external-p): Put back this function which was
	lost in a merge.

2003-09-10  Luke Gorrie  <luke@bluetail.com>

	* slime.el, cmucl-wire.el, swank.lisp: Large patch from Helmut
	Eller. Includes: apropos, describe, compile-defun, fully
	asynchronous continuation-based wire interface, interactive
	evaluation, and more. Very nice :-)

2003-09-08  Luke Gorrie  <luke@bluetail.com>

	* cmucl-wire.el (wire-symbol-name, wire-symbol-package): Fixed to
	handle internal references (pkg::name).

	* slime.el (slime-swank-connection-retries): Increased default
	number of connection retries from 5 to ten.

	* swank.lisp (find-fdefinition): Support for finding
	function/macro definitions for Emacs.

	* slime.el: Indentation "cleanups": somehow I was using
	`common-lisp-indent-function' for Emacs Lisp code previously.
	(slime-edit-fdefinition): Added M-. (edit definition) and M-, (pop
	definition stack) commands. Definitions are found in much the same
	way Hemlock does it. The user-interface is not the same as TAGS,
	because I like this one better. We can add TAGS-compatibility as
	an optional feature in future.

2003-09-04  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-completions): Now supports completing
	package-internal symbols with "pkg::prefix" syntax.

	* Everything: imported slime-0.2 sources.


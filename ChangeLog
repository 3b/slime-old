2003-10-21  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-space): Don't give an error when not connected,
	to avoid feeping.

	* swank-sbcl.lisp (swank-compile-string): Include only one
	:SOURCE-PATH attribute in the plist, and replace the front element
	with a 0 (fixes a problem probably due to recent hacks to the
	elisp source-path lookups).

	* slime.el (inferior-slime-mode): New minor mode for use with
	`inferior-lisp-mode'. Defines a subset of the `slime-mode' keys
	which don't clash with comint (e.g. doesn't bind M-{p,n}).
	(slime-keys): List of keybinding specifications.
	(slime-find-buffer-package): If we don't find the "(in-package" by
	searching backwards, then try forwards too.

	* swank.lisp (completions): Fixed semantics: should now consider
	only/all completions that would not cause a read-error due to
	symbol visibility. Also avoiding duplicates and sorting on
	symbol-name.

2003-10-20  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (completions): Slight change of semantics: when a
	prefix-designator is package-qualified, like "swank:", only match
	symbols whose home-package matches the one given - ignore
	inherited symbols.

	* slime.el: Updated test suite to work with the different backends:
	(find-definition): Lookup definitions in swank.lisp.
	(arglist): Lookup arglists of functions in swank.lisp.

2003-10-20  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (interactive-eval): Make test case independent of
	*print-case*.

2003-10-20  Luke Gorrie  <luke@bluetail.com>

	* swank-cmucl.lisp (clear-xref-info): Conditionalised
	xref:*who-is-called* and xref:*who-macroexpands* with
	#+CMU19. This makes SLIME compatible with CMUCL 18e, but also
	disables the `who-macroexpands' command in any CMUCL version that
	doesn't have the "19A" feature (which does break the command in
	some snapshot builds that can actually support it).

2003-10-20  Daniel Barlow  <dan@telent.net>

	* swank.lisp (*notes-database*): tyop fix

	* swank-sbcl.lisp (throw-to-toplevel): select TOPLEVEL restart
	instead of throwing to a catch that no longer exists

	* slime.el: change some strings containing 'CMUCL' to more 
        backend-agnostic phrases

2003-10-19  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el, swank-cmucl.lisp, swank.lisp: First shoot at input
	redirection.

	* swank-sbcl.lisp, swank-openmcl.lisp: Bind *slime-input* and
	*slime-io* to dummy values.

2003-10-19  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime): Connection setup is now asynchronous, with
	retrying on a timer. This makes it possible to bring the server up
	by hand while debugging. `M-x slime' while already connected will
	cause the old connection to be dropped and a new one established.
	(slime-disconnect): New command to disconnect from Swank, or
	cancel asynchronous connection attempts when not yet connected.
	(slime-state/event-panic): Illegal events in the communication
	state machine now trigger a general panic that disconnects from
	Lisp, and displays a message describing what has happened. This is
	a bug situation.
	(slime-connect): Print a message during connection attempts unless
	the minibuffer is active (it's annoying to get messages while
	trying to enter commands).

2003-10-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Fix some bugs in the state machine and be a bit more
	careful when processing pending input.
	(slime-compile-region): New command.
	Some more tests.
	
2003-10-17  James Bielman  <jamesjb@jamesjb.com>

	* .cvsignore: Add OpenMCL and SBCL fasl file extensions.

	* swank-openmcl.lisp (who-calls): Fix bug where we would try to
	take the TRUENAME of NIL when source information isn't available
	for a caller.
	(backtrace-for-emacs): Clean up the backtrace code a bit in 
	preparation for implementing FRAME-LOCALS.
	(frame-catch-tags): Implement a stub version of this.
	(frame-locals): Implemented fully for OpenMCL.

	* swank-loader.lisp (compile-files-if-needed-serially): Be a little
	more verbose when compiling files.

2003-10-17  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp, swank-sbcl.lisp, swank-openmcl.lisp,
	swank-cmucl.lisp: Move more stuff to swank.lisp.
	
2003-10-17  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-post-command-hook): Check that we are connected
	before trying to process input.
	(slime-net-connect): Handle `network-error' condition for XEmacs
	21.5. (Thanks Raymond Toy.)

	* swank-sbcl.lisp: Report style-warnings separately from notes
	(patch from Christophe Rhodes). Use REQUIRE to load sb-introspect
	instead of loading the source file (requires the sb-introspect
	library to be installed, which doesn't yet happen in the
	sourceforge-lagged SBCL anoncvs, but does in the real one).

	* slime.el (slime-style-warning-face): Added style-warnings, which
	are between a warning and a note in severity. (Patch from
	Christophe Rhodes).

	* test.sh: When the test fails to complete, print "crashed"
	instead of reporting nonsense.

2003-10-17  James Bielman  <jamesjb@jamesjb.com>

	* swank.lisp (apropos-symbols): Change back to using the standard
	2-argument APROPOS-LIST and check symbols explicitly when
	EXTERNAL-ONLY is true.
	Move loading of sys-dependent backend code into 'swank-loader'.

	* swank-sbcl.lisp: Moved declarations of *PREVIOUS-COMPILER-CONDITION*
	into 'swank.lisp' to kill warnings about undefined variables.

	* swank-openmcl.lisp (handle-compiler-warning): Use source position
	instead of function name for warning locations.
	(swank-compile-string): Compile into a temporary file instead of
	using COMPILE so finding warning positions works when using C-c C-c.
	(compute-backtrace): Don't display frames without a function.
	(apropos-list-for-emacs): Implement APROPOS.
	(who-calls): Implement WHO-CALLS.
	(completions): Implement COMPLETIONS.
	Use NIL instead of zero so FRESH-LINE does the right thing.

	* slime.el (slime-maybe-compile-swank): Removed function---compile
	the backend using 'swank-loader.lisp' instead.
	(slime-backend): Changed default backend to 'slime-loader'.
	(slime-lisp-binary-extension): Deleted as this is no longer needed.

	* swank-loader.lisp: New file.

2003-10-17  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-net-connect): Check that
	`set-process-coding-system' is fbound before calling it. This is
	needed in the XEmacs I built from sources.

2003-10-17  Daniel Barlow  <dan@telent.net>

	* swank-sbcl.lisp: Transplanted Helmut's serve-event server to
	replace the existing thread-using server.  SLIME now has no 
	dependency on SB-THREAD

	* slime.el (slime-find-buffer-package): handle errors from (read)
	for the case where the buffer ends before the in-package form does
	(slime-set-package): insert missing comma
	(slime-goto-source-location): sbcl has a disagreement with emacs
	over the meaning of a character position.  Level up with
	C-M-f C-M-b

	* assorted typo fixes

2003-10-16  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-forward-source-path): Improved somewhat. Seems
	to work for all common cases except backquote. Backquote is
	tricky, because the source-paths are based on the reader's
	expansion, e.g.:
	* (let ((*print-pretty* nil))
	    (print (read-from-string "`(a ,@(b c) d)")))
	  -->
	  (COMMON-LISP::BACKQ-CONS (QUOTE A)
	                           (COMMON-LISP::BACKQ-APPEND (B C)
			                                      (QUOTE (D))))
	Must investigate whether we need to write a hairy
	backquote-traversing state machine or whether this is something
	that could be fixed in CMUCL.

	* swank*.lisp (with-trapping-compiler-notes): This macro is now
	defined here, and expands to a call to the backend-defined
	`call-trapping-compiler-notes' with the body wrapped in a
	lambda. This is to avoid swank.lisp referring to macros in the
	backends -- it gets compiled first so it thinks they're functions.

	* slime.el (slime-swank-connection-retries): New default value is
	`nil', which means unlimited retries (until user aborts). Retry
	interval also reduced from once per second to four times per
	second.

2003-10-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp, swank.lisp: Fix CMUCL support. 

2003-10-15  Daniel Barlow  <dan@telent.net>

	* swank.lisp: rearrange the backends.  rename swank.lisp to
	swank-cmucl.lisp, then create new swank.lisp which loads an
	appropriate backend according to *features*.  Next up, 
	identify common functions in the backends and move them
	into swank.lisp

2003-10-15  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Inspector support.  list-callers, list-callees
	implemented without xref.

	* swank.lisp: Lisp side for inspector and list-callers,
	list-calees.  Better fdefinition finding for struct-accessors.


2003-10-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-point-moves-p): Macro for executing subforms and
	returning true if they move the point.

	* test.sh: New file to run the test suite in batch-mode. Will need
	a little extending to allow configuring the right variables to
	work with non-CMUCL backends.

	* slime.el: Set `indent-tabs-mode' to nil. This makes diffs look
	better.
	(slime-start-swank-server): Now passing the port number to
	SWANK:START-SERVER.
	(slime-evaluating-state): Debugging synchronous evaluations with
	recursive edits now works.
	(slime-forward-sexp): Added support for #|...|# reader comments.
	(sldb-hook): New hook for entry to the debugger (used for the test
	suite).
	(slime-run-tests): Reworked the testing framework. Now presents
	results in an outline-mode buffer, with only the subtrees
	containing failed tests expanded initially.
	(slime-check): Check-name can now be a string or
	format-control. (Test cases have been updated to take advantage of
	this.)
	(compile-defun): This test case now works for the case containing
	#|..|#
	(async-eval-debugging): New test case for recursively debugging
	asynchronous evaluation.

2003-10-15  Daniel Barlow  <dan@telent.net>

	* README.sbcl: new file

	* README: update for new backends, change of hosting provider

	* swank-sbcl.lisp: new file.
	New SWANK backend for Steel Bank Common Lisp, adapted from
	swank.lisp with bits of swank-openmcl.lisp

2003-10-12  Daniel Barlow  <dan@telent.net>

	* slime.el (sldb-mode-map): add mouse-2 clickability for areas
	in sldb buffers covered by the sldb-default-action property:
	restarts can now be mouse-activated

2003-09-28  James Bielman  <jamesjb@jamesjb.com>

	* swank-openmcl.lisp: New file, a Slime backend for OpenMCL 0.14.x.
	(condition-function-name): Figure out the name of methods correctly
	instead of passing a list to Emacs.

	* slime.el (slime-goto-location): Try to position notes based on
	some (questionable) regex searching if the :FUNCTION-NAME property
	is set.  Used in the OpenMCL backend which does not support source
	paths.

2003-09-29  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Fairly major hacking.
	Rewrote the evaluation mechanics: similar design but some macros
	to make it look more like a push-down automaton (which it really
	was!). Debugging Lisp no longer uses recursive edits, partly as a
	side-effect and partly to see if it's better this way.
	Removed the asynchronous-communication test cases that tested
	something we decided not to do.
	(slime-eval-string-async): Give a meaningful error message when
	trying to make a request while already busy.
	(slime-lisp-binary-extension): Uh oh, time to start taking out
	gratuitous CMUCL-isms. This variable renamed from
	`slime-cmucl-binary-extension'.
	(slime-backend): Name of the Lisp backend file, defaulting to
	"swank", but can be set to e.g. "swank-openmcl".

	* swank.lisp: Minor protocol changes to accomodate slime.el's
	changes above.

2003-09-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp 
	(getpid, set-package, set-default-directory): New functions.
	(slime-out-misc): Don't send empty strings.
	(*redirect-output*, read-from-emacs): A new switch to turn output
	redirection off. Useful for debugging.
	(interactive-eval, interactive-eval-region, pprint-eval,
	re-evaluate-defvar): Bind *package* to *buffer-package*.
	(with-trapping-compilation-notes): Add a dummy argument for better
	indentation.
	(measure-time-intervall, call-with-compilation-hooks): Measure
	compilation time.
	(frame-locals): Use di::debug-function-debug-variables instead of
	di:ambiguous-debug-variables. Don't access non-valid variables.

	* slime.el
	(slime-display-message-or-view): Delete old multi-line windows.
	(slime-read-package-name): Added an optional initial-value
	argument.  slime-pid: New variable.
	(slime-init-dispatcher): Initialize slime-pid.
	(slime-send-sigint): Use slime-pid instead of inferior-lisp-proc.
	(slime-eval): Accept debug-condition messages.
	(slime-output-buffer): Turn slime-mode on.
	(slime-switch-to-output-buffer): New command.  Bound to C-c C-z.
	(slime-show-note-counts): Display compilation time.
	(slime-untrace-all, slime-set-package, slime-set-default-directory
	slime-sync-package-and-default-directory): New commands.
	(slime-princ-locals): Don't access non-valid variables.  This may
	cause segfaults and severely confuse CMUCL.
	(slime-define-keys): New macro.

2003-09-28  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (create-swank-server): Bind the listen-socket on the
	loopback interface by default, so that remote machines can't
	connect to the Swank server.

2003-09-27  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (with-trapping-compilation-notes): New macro for
	bindings the handlers to record compiler notes. Now being used in
	`compile-string', which I had broken when removing the compilation
	hook.

	* slime.el (slime-function-called-at-point): Rewritten to work
	better. Now considers "((foo ..." _not_ to be a function call to
	foo because of the double ('s - this will keep it from misfiring
	in e.g. LET bindings.
	(def-slime-test): All tests now being with (slime-sync). This
	fixes some accidental/bogus test failures.

	* swank.lisp (handle-notification-condition): Rewrote
	compiler-note collection. Now it uses lower-level condition
	handlers instead of c:*compiler-notification-function*. This way
	the error messages are tailored to omit redundant information,
	like the filename and original source text (which are displayed
	and highlighted in Emacs already). Much nicer.
	(sort-contexts-by-source-path): Now sorting xref results by
	lexical source-path order, so that you're always jumping in the
	same direction.
	(*debug-definition-finding*): New variable. You can set this to
	true if you want to be popped into the debugger when M-. fails to
	find a definition (for debugging the
	definition-finding). Otherwise it reports the error to Emacs as a
	message, like "Error: SETQ is a special form."

	* slime.el (slime-fetch-features-list): New command to fetch the
	*FEATURES* list from Lisp and store it away. This is done
	automatically upon connection, but can also be called manually to
	update.
	(slime-forward-reader-conditional): Now does the right things with
	reader-conditionals (#+ and #-) based on the Lisp features.

2003-09-26  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-setup): Setting `truncate-lines' to t in the
	debug buffer. I like having the backtrace take strictly one line
	per frame, since otherwise a few ugly arguments (e.g. streams) can
	chew up a lot of space. (Can make this a configurable on request
	if tastes differ :-)

	* swank.lisp: Did a little defensive programming so that asking
	for the definition of an unbound function will return nil to Emacs
	instead of entering the debugger.
	(format-frame-for-emacs): Binding *PRETTY-PRINT* to nil when
	formatting frames (due to truncate-lines change above).

2003-09-24  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* swank.lisp:
	Support for stream redirection.
	slime-output-stream: New structure.
	(slime-out-misc): New function.
	*slime-output*: New variable.
	(read-from-emacs): Redirect output to *slime-output*.
	(read-form): Bind *package* inside the standard-io-syntax macro.
	(eval-string): Read the string with read-form.
	(completions): Support for keyword completion.

	* slime.el (slime-process-available-input, slime-eval): Rewritten
	once again.  Don't use unwind-protect anymore. Didn't work
	properly when the Lisp side aborted due to too many debug
	levels. "Continuing" from the Emacs debugger aborts one level on
	the Lisp side. "Quitting" from the Emacs debugger quits the Lisp
	side too. Increase stack sizes before entering the recursive edit.
	(slime-eval-async-state, slime-eval, sldb-state): Support for stream
	output.
	slime-last-output-start: New variable.
	(slime-output-buffer, slime-output-buffer-position,
	 slime-insert-transcript-delimiter, slime-show-last-output,
	 slime-output-string): New functions.
	(slime-show-evaluation-result,
	slime-show-evaluation-result-continuation): Use them.
	(slime-use-inf-lisp-p, slime-insert-transcript-delimiter,
	 slime-inferior-lisp-marker-position,
	 slime-inferior-lisp-show-last-output): Deleted.
	(slime-use-tty-debugger, slime-debugger-hook,
	slime-enter-tty-debugger, slime-tty-debugger-state): Deleted. Removed
	tty debugger support.
	(def-sldb-invoke-restart): Renamed.
	(define-sldb-invoke-restart-key, define-sldb-invoke-restart-keys):
	Version without eval.
	(defun-if-undefined): New macro.
	Many indentation fixes.

2003-09-23  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (completions):
	Moved most of the completion code to Lisp.
	(string-prefix-p): Be case insensitive.

	* slime.el:
	Make sure define-minor-mode is defined before we use it.
	(slime-completing-read-internal, slime-completing-read-symbol-name,
	slime-read-from-minibuffer, slime-completions, slime-complete-symbol):
	Support for reading symbols and expressions with completion.
	(slime-read-symbol-name): New function.
	(slime-read-symbol): Use it.
	(slime-read-package-name): Case insensitive completion.

	(slime-edit-symbol-fdefinition, slime-edit-fdefinition): Rename
	slime-edit-symbol-fdefinition to slime-edit-fdefinition.

2003-09-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-show-xrefs): Improved the xrefs buffer, now
	using a custom minor mode.
	(slime-next-location): This function goes to the next "something"
	by funcall'ing slime-next-location-function. Currently that
	variable is set by xref commands like who-calls to go to the next
	matching reference. In future it can also be used to go to the
	next function definition for a generic-function-understanding
	version of edit-fdefinition. Bound to C-M-. and C-c C-SPC, until
	we see which binding is better.

2003-09-22  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-symbol-at-point): Now returns a symbol, as the
	name suggests.
	(slime-symbol-name-at-point): This one returns a string.
	(slime-read-symbol): New function for taking the symbol at point,
	or prompting if there isn't one.
	(slime-edit-fdefinition): Now uses looks up the symbol at point,
	not the function being called at point.

	* swank.lisp (who-calls, who-references, who-binds, who-sets,
	who-macroexpands): New function.
	(present-symbol-before-p): Use `*buffer-package*' when checking
	accessibility of symbols.

	* slime.el (slime-restore-window-configuration): New command to
	put the Emacs window configuration back the way it was before
	SLIME last changed it.
	(slime-who-calls, etc): Very basic WHO-{CALLS,..} support. Not
	finished, wrestling around trying to make `view-mode' or
	`help-mode' help me (I just want to hijack RET and C-m). Bound to
	"C-c C-w ...".

2003-09-21  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Rearranged the `outline-mode' structure slightly.
	(slime-check-connected): Using new function to give a helpful
	error message if you try to use commands before establishing a
	connection to CMUCL.
	(sldb-mode): Keys 0-9 are now shortcuts to invoke restarts.

	* README, swank.el: Updated commentary.

2003-09-20  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-choose-overlay-region): Tweaked overlay
	placement.

	* swank.lisp (handle-notification): Skipping null
	notifications. For some reason CMUCL occasionally calls us with
	NIL as each argument.

2003-09-19  Helmut Eller <e9626484@stud3.tuwien.ac.at>
	
	* slime.el (slime-connect): Propose default values when called
	interactively.
	(slime-process-available-input): If possible, use while rather than
	recursion.
	(slime-compilation-finished-continuation): New function.
	(slime-compile-file, slime-compile-defun): Use it.
	(slime-forward-source-path): Id an error is encounter move back to the
	last valid point.
	(slime-eval-region): Use append COND.  Send the entire string to the
	Lisp side and read&evaluate it there.
	(slime-eval-buffer): New function.
	(sldb-sugar-move, sldb-details-up, sldb-details-down): New functions.
	
	* swank.lisp (interactive-eval-region): New function.
	(re-evaluate-defvar): New function.
	(compile-defun): Install handler for compiler-errors.
	(function-first-code-location): Simplified.
	
2003-09-17  Helmut Eller <e9626484@stud3.tuwien.ac.at>
	
	* slime.el (slime-apropos-all): New command, bound to C-c M-a.
	(slime-eval): Simplified.
	(swank:arglist-string): Send a string and not a symbol.  It easier
	to package related thins in CL.
	(slime-edit-symbol-fdefinition): Prompt when called with
	prefix-argument.
	(slime-eval-region): New function.
	(slime-load-file): New function.
	(slime-show-description): Set slime minor mode in Help buffer.

	* swank.lisp: (read-string, from-string): Renamed read-string to
	from-string.
	(to-string) New function.
	(arglist-string): Catch reader errors.
	(sldb-loop): Also bind *readstrable*.

	
2003-09-16  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-toggle-trace-fdefinition): New command.
	(slime-symbol-at-point, slime-sexp-at-point): New utility functions.
	(slime-edit-symbol-fdefinition): Similar to slime-edit-fdefinition but
	uses swank:function-source-location-for-emacs.
	(slime-goto-source-location): New function.
	(sldb-show-source): Use it.
	(slime-read-package-name): Completing read for package names.
	(slime-apropos): Use it.

	* swank.lisp (function-source-location,
	function-source-location-for-emacs): New functions to extract
	source locations from compiled code.  For struct-accessors we try
	to find the source location of the corresponding constructor.
	(list-all-package-names): New function.
	(toggle-trace-fdefinition, tracedp): New functions.

2003-09-15  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el: Moved many CL fragments from slime.el to swank.lisp.
	(slime-compile-file, slime-compile-defun, slime-goto-location):
	Compiler notes are now represented with a property list.  To find
	the source expression first move to the file offset of the
	top-level form and then use the source path to find the
	expression.  This should avoid many reader issues.  For
	compile-defun store the start position of the top-level expression
	from the buffer in the compiler notes and use that to locate error
	messages.  Add error overlays for notes without context to the
	first available expression.

	* swank.lisp: Moved many CL fragments from slime.el to swank.lisp.
	(defslimefun): New macro.

2003-09-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-setup-command-hooks): Removed post-command-hook
	that was used for cleaning up input that was unprocessed due to an
	error breaking out of the process filter. This is now handled by
	an `unwind-protect' in the filter.

	* swank.lisp (apropos-list-for-emacs): Hacked the apropos listing
	to accept more options and to specially sort results.

	* slime.el (slime-net-send): Added newlines to messages over the
	wire. This makes the protocol nicely readable in Ethereal.
	(slime-sync): New function for blocking until asynchronous
	requests are complete.
	(slime-apropos): Hacked the apropos command: by default, only
	external symbols are shown. With a prefix argument you have the
	option to include internal symbols and to specify a package.
	(slime-run-tests): Extended the test suite. Use `M-x
	slime-run-tests' to run it.

2003-09-14  Luke Gorrie  <luke@bluetail.com>

	* slime.el, swank.lisp: Added the debugger written by Helmut.

	* cmucl-wire.el: Removed. The WIRE communication protocol has been
	replaced by a simple custom TCP protocol based on READ/PRIN1 to
	send sexps as ascii text. This simplifies the code, makes the
	protocol nicely debugable with ethereal, and should ease porting
	to other Lisps. Incremented TCP port number to 4005 in honor of
	the new protocol.
	
	In addition, Lisp now always uses *print-case* of :DOWNCASE when
	preparing sexps for Emacs. This is in reaction to a bug with Emacs
	reading the empty list as `NIL' instead of `nil'.

	* slime.el (slime-net-connect): The Emacs end of the new
	communication protocol.

	* swank.lisp (create-swank-server): The Lisp end of the new
	communication protocol.

2003-09-11  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-mode): Added Helmut's commands to the mode
	description.
	(slime-show-apropos): Setting `truncate-lines' to t in apropos
	listings, to avoid line-wrapping on overly long descriptions.
	(slime-run-tests): Added the beginnings of an automated test
	suite. (This is most useful for testing cross-Emacsen
	compatibility before releases.)

	* swank.lisp (symbol-external-p): Put back this function which was
	lost in a merge.

2003-09-10  Luke Gorrie  <luke@bluetail.com>

	* slime.el, cmucl-wire.el, swank.lisp: Large patch from Helmut
	Eller. Includes: apropos, describe, compile-defun, fully
	asynchronous continuation-based wire interface, interactive
	evaluation, and more. Very nice :-)

2003-09-08  Luke Gorrie  <luke@bluetail.com>

	* cmucl-wire.el (wire-symbol-name, wire-symbol-package): Fixed to
	handle internal references (pkg::name).

	* slime.el (slime-swank-connection-retries): Increased default
	number of connection retries from 5 to ten.

	* swank.lisp (find-fdefinition): Support for finding
	function/macro definitions for Emacs.

	* slime.el: Indentation "cleanups": somehow I was using
	`common-lisp-indent-function' for Emacs Lisp code previously.
	(slime-edit-fdefinition): Added M-. (edit definition) and M-, (pop
	definition stack) commands. Definitions are found in much the same
	way Hemlock does it. The user-interface is not the same as TAGS,
	because I like this one better. We can add TAGS-compatibility as
	an optional feature in future.

2003-09-04  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-completions): Now supports completing
	package-internal symbols with "pkg::prefix" syntax.

	* Everything: imported slime-0.2 sources.


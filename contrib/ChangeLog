2007-08-31  Helmut Eller  <heller@common-lisp.net>

	Move compound prefix completion and autodoc to contrib.
	Interdependencies made it almost necessary to move parsing code
	and editing commands in the same patch.

	* slime-c-p-c.el: New file.
	* swank-c-p-c.el: New file.
	* slime-parse.el: New file.
	* swank-arglists.el: New file.
	* slime-editing-commands.el: New file.
	* slime-autodoc.el: New file.

2007-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime-presentations.el (slime-last-output-target-id)
	(slime-output-target-to-marker, slime-output-target-marker)
	(slime-redirect-trace-output): Moved back into SLIME core.

	* swank-presentation-streams.lisp: Require swank-presentations.
	(present-repl-results-via-presentation-streams): New.
	(*send-repl-results-function*): Set this variable rather than
	overriding send-repl-results-to-emacs.

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	* slime-presentations.el (slime-clear-presentations): New
	function. Add it to slime-repl-clear-buffer-hook.

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	* swank-listener-hooks.lisp: New file

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	Move the rest of the presentation related code.

	* swank-presentations.lisp (present-repl-results): Renamed from
	send-repl-results-to-emacs.

2007-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-presentations.lisp (send-repl-results-to-emacs): 
	Override core defun to mark up REPL results as presentations.
	
	* swank-presentations.lisp: New file.
	* slime-presentations.el: Load it.

	* slime-presentations.el (slime-presentation-write): Remove id
	argument.

	* slime-presentation-streams.el: Require slime-presentations contrib.

2007-08-27  Helmut Eller  <heller@common-lisp.net>

	Move presentations to contrib. (ELisp part)

	* slime-presentations.el: New file.
	* slime-scratch.el (slime-scratch-buffer): Ignore presentations.

2007-08-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Some fixes to the presentation-streams contrib.
	
	* swank-presentation-streams.lisp [sbcl]: Load the pretty-printer
	patch only at load time.  Add some trickery so that SBCL does not
	complain about the changed layout of the pretty-stream class.
	
	* swank-presentation-streams.lisp (slime-stream-p): Using special
	return values, indicate whether we are printing to the
	REPL-results stream, or a dedicated stream.
	(presentation-record): New slot "target".
	(presentation-start, presentation-end): Use it (rather than the
	global variable *use-dedicated-output-stream*) to decide whether
	to use the bridge protocol or the :presentation-start/-end
	protocol.  Also use it as the TARGET argument of
	:presentation-start/-end messages. 
	(presenting-object-1): Use the new return values of
	slime-stream-p.
	
	* swank-presentation-streams.lisp (slime-stream-p) [cmu]: Use the
	return value of slime-stream-p rather than the global variable
	*use-dedicated-output-stream* to decide whether printing through
	pretty streams is safe for the layout.

2007-08-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Make the fancy "presentation streams" feature a contrib.
	Previously, it was only available if "present.lisp" was loaded
	manually. 
	
	* slime-presentation-streams.el: New file.
	* swank-presentation-streams.lisp: New file, moved here from
	../present.lisp 

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	* slime-typeout-frame.el: New file.
	* slime-xref-browser.el: New file.
	* slime-highlight-edits.el: New file.
	* slime-scratch.el: New file.

2007-08-23  Helmut Eller  <heller@common-lisp.net>

	Move Marco Baringer's inspector to contrib.

	* swank-fancy-inspector.lisp: New file. The only difference to the
	code is that inspect-for-emacs methods in this file are
	specialized to the new class `fancy-inspector'.
	(fancy-inspector): New class.

	* slime-fancy-inspector.el: New file.

2007-08-19  Helmut Eller  <heller@common-lisp.net>

	Moved fuzzy completion code to contrib directory.

	* slime-fuzzy.el: New file.
	(slime-fuzzy-init): New function.  Load CL code on startup.

	* swank-fuzzy.lisp: New file. Common Lisp code for fuzzy
	completion.
